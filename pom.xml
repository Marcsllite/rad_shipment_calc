<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                        http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.marcsllite</groupId>
    <name>Rad Shipment Calculator</name>
    <artifactId>rad_shipment_calc</artifactId>
    <version>${build.version}</version>
    <organization><name>Marcsllite</name></organization>
    <inceptionYear>2024</inceptionYear>
    <description>An application to help calculate the classification of shipments containing radionuclides</description>
    <packaging>jar</packaging>
    
    <properties>
        <build.version>1.0.0.0</build.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>17</maven.compiler.release>
        
        <!-- Dependency Versions -->
        <commons-lang3.version>3.17.0</commons-lang3.version>
        <javafx.version>17.0.10</javafx.version>
        <log4j.version>2.19.0</log4j.version>
        <hibernate-core.version>6.4.4.Final</hibernate-core.version>
        <h2.version>2.2.224</h2.version>
        <mockito.version>3.12.4</mockito.version>
        <junit.version>5.11.0</junit.version>
        <testfx.version>4.0.18</testfx.version>
        <assertj-core.version>3.26.3</assertj-core.version>
        <openjfx-monocle.version>17.0.10</openjfx-monocle.version>
        <junit-pioneer.version>2.2.0</junit-pioneer.version>
        
        <!-- Plugin Versions -->
        <maven-dependency-plugin.version>3.8.0</maven-dependency-plugin.version>
        <javafx-maven-plugin.version>0.0.6</javafx-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
        <sonar-maven-plugin.version>3.9.0.2155</sonar-maven-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <really-executable-jar-maven-plugin.version>2.1.1</really-executable-jar-maven-plugin.version>
        <launch4j-maven-plugin.version>2.5.1</launch4j-maven-plugin.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <maven-surefire-junit5-tree-reporter.version>1.2.1</maven-surefire-junit5-tree-reporter.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
        
        <!-- SonarQube -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-merged/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.language>java</sonar.language>
        <sonar.junit.reportPaths>target/surefire-reports,target/failsafe-reports</sonar.junit.reportPaths>

        <!-- Test Coverage -->
        <jacoco.percentages.min.instruct>0.88</jacoco.percentages.min.instruct>
        <jacoco.percentages.max.instruct>0.90</jacoco.percentages.max.instruct>
        <jacoco.percentages.min.line>0.86</jacoco.percentages.min.line>
        <jacoco.percentages.max.line>0.88</jacoco.percentages.max.line>
        <jacoco.percentages.min.branch>0.78</jacoco.percentages.min.branch>
        <jacoco.percentages.max.branch>0.80</jacoco.percentages.max.branch>
        <jacoco.percentages.min.complex>0.79</jacoco.percentages.min.complex>
        <jacoco.percentages.max.complex>0.81</jacoco.percentages.max.complex>
        <jacoco.percentages.min.method>0.89</jacoco.percentages.min.method>
        <jacoco.percentages.max.method>0.91</jacoco.percentages.max.method>
        <jacoco.missed.count.class>0</jacoco.missed.count.class>
    </properties>

    <ciManagement>
        <system>appveyor</system>
        <url>https://ci.appveyor.com/project/Marcsllite/rad-shipment-calc</url>
    </ciManagement>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        
        <!-- JavaFX dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <!-- adds javafx.graphics -->
            <!-- javafx.graphics adds javafx-base -->
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        
        <!-- logging dependencies -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        
        <!-- database dependencies -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <!-- adds:
                jakarta.persistence-api
                jakarta.transaction-api
                jboss-logging
                hibernate-commons-annotations
                jandex
                classmate
                byte-buddy
                jakarta.xml.bind-api
                jaxb-runtime
                jakarta.inject-api
                antlr4-runtime
             -->
            <!-- jakarta.xml.bind-api adds jakarta.activation-api -->
            <!-- jab-runtime adds jaxb-core -->
            <!-- jaxb-core adds:
                angus-activation
                txw2
                istack-commons-runtime
             -->
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>
        
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <!-- adds mockito-core -->
            <!-- mockito-core adds:
                byte-buddy-agent
                objenesis
            -->
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <!-- adds:
                junit-platform-engine
                apiguardian-api
            -->
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <!-- adds:
                opentest4j
                junit-platform-commons
            -->
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <!-- adds:
                testfx-core
                hamcrest
            -->
            <!-- testfx-core adds org.osgi.core -->
            <artifactId>testfx-junit5</artifactId>
            <version>${testfx.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.testfx</groupId>
                    <artifactId>openjfx-monocle</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <!-- adds junit-pioneer -->
            <!-- junit-pioneer adds junit-platform-launcher -->
            <artifactId>openjfx-monocle</artifactId>
            <version>${openjfx-monocle.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-base</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-graphics</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <version>${junit-pioneer.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
        <outputDirectory>${basedir}/target/classes</outputDirectory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>databaseAudit/*</exclude>
                    <exclude>scripts/*</exclude>
                </excludes>
            </resource>
        </resources>
        <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
        <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${basedir}/src/integration-test/resources</directory>
            </testResource>
            <testResource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>csv/*</exclude>
                    <exclude>databaseAudit/*</exclude>
                    <exclude>META-INF/*</exclude>
                    <exclude>scripts/*</exclude>
                </excludes>
            </testResource>
        </testResources>
        
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>${javafx-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.skife.maven</groupId>
                    <artifactId>really-executable-jar-maven-plugin</artifactId>
                    <version>${really-executable-jar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.akathist.maven.plugins.launch4j</groupId>
                    <artifactId>launch4j-maven-plugin</artifactId>
                    <version>${launch4j-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <configuration>
                    <mainClass>radShipmentCalc/com.marcsllite.App</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <!-- Default configuration for running -->
                        <!-- Usage: mvn clean javafx:run -->
                        <id>default-cli</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <encoding>UTF-8</encoding>
                    <compilerArgs>
                        <arg>--add-opens</arg>
                        <arg>javafx.base/com.sun.javafx.logging=ALL-UNNAMED</arg>
                        <arg>--add-opens</arg>
                        <arg>javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</arg>
                        <arg>--add-opens</arg>
                        <arg>javafx.graphics/com.sun.javafx.util=ALL-UNNAMED</arg>
                        <arg>--add-opens</arg>
                        <arg>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-integration-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.skife.maven</groupId>
                <artifactId>really-executable-jar-maven-plugin</artifactId>
                <configuration>
                    <inputFile>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</inputFile>
                    <programFile>${project.artifactId}-${project.version}.sh</programFile>
                    <scriptFile>src/packaging/jarToExecutable.sh</scriptFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>really-executable-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>l4j-win-gui</id>
                        <phase>package</phase>
                        <goals><goal>launch4j</goal></goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <jar>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</jar>
                            <outfile>target/${project.artifactId}-${project.version}.exe</outfile>
                            <dontWrapJar>false</dontWrapJar>
                            <errTitle>${project.name}</errTitle>
                            <stayAlive>false</stayAlive>
                            <restartOnCrash>false</restartOnCrash>
                            <singleInstance>
                                <mutexName>${project.artifactId}</mutexName>
                            </singleInstance>
                            <jre>
                                <path>%JAVA_HOME%</path>
                                <minVersion>17</minVersion>
                                <requiresJdk>false</requiresJdk>
                                <requires64Bit>false</requires64Bit>
                            </jre>
                            <versionInfo>
                                <fileVersion>${project.version}</fileVersion>
                                <txtFileVersion>${project.version}</txtFileVersion>
                                <fileDescription>${project.description}</fileDescription>
                                <copyright>C</copyright>
                                <productVersion>${project.version}</productVersion>
                                <txtProductVersion>${project.version}</txtProductVersion>
                                <productName>${project.name}</productName>
                                <companyName>${project.organization.name}</companyName>
                                <internalName>${project.name}</internalName>
                                <originalFilename>${project.artifactId}-${project.version}.exe</originalFilename>
                                <trademarks>text</trademarks>
                                <language>ENGLISH_US</language>
                            </versionInfo>
                            <classPath>
                                <mainClass>com.marcsllite.App</mainClass>
                            </classPath>
                            <messages>
                                <startupErr>Application failed to start</startupErr>
                                <jreNotFoundErr>Java not installed</jreNotFoundErr>
                                <jreVersionErr>Java 17 not found</jreVersionErr>
                                <launcherErr>Error Launching Application</launcherErr>
                                <!-- Used by console header only. -->
                                <instanceAlreadyExistsMsg>Cannot run multiple instances</instanceAlreadyExistsMsg>
                            </messages>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-executable-jar</id>
                        <phase>prepare-package</phase>
                        <goals><goal>single</goal></goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>
                                        com.marcsllite.App
                                    </mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>assembly</id>
                        <phase>package</phase>
                        <goals><goal>single</goal></goals>
                        <configuration>
                            <finalName>${project.name}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>${maven-surefire-junit5-tree-reporter.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skipAfterFailureCount>1</skipAfterFailureCount>
                    <argLine>@{surefire.jacoco.args}</argLine>
                    <excludes>
                        <exclude>**/*GUITest.java</exclude>
                    </excludes>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${basedir}/src/main/resources</additionalClasspathElement>
                    </additionalClasspathElements>
                    <reportFormat>plain</reportFormat>
                    <consoleOutputReporter>
                        <disable>true</disable>
                    </consoleOutputReporter>
                    <statelessTestsetInfoReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
                        <printStacktraceOnError>true</printStacktraceOnError>
                        <printStacktraceOnFailure>true</printStacktraceOnFailure>
                        <printStdoutOnError>true</printStdoutOnError>
                        <printStdoutOnFailure>true</printStdoutOnFailure>
                        <printStdoutOnSuccess>false</printStdoutOnSuccess>
                        <printStderrOnError>true</printStderrOnError>
                        <printStderrOnFailure>true</printStderrOnFailure>
                        <printStderrOnSuccess>false</printStderrOnSuccess>
                    </statelessTestsetInfoReporter>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipAfterFailureCount>1</skipAfterFailureCount>
                    <argLine>@{failsafe.jacoco.args}
                        --add-modules=javafx.controls,javafx.fxml
                        --add-opens
                        javafx.base/com.sun.javafx.logging=ALL-UNNAMED
                        --add-opens
                        javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
                        --add-opens
                        javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
                        --add-opens
                        javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</argLine>
                    <trimStackTrace>false</trimStackTrace>
                    <includes>
                        <include>**/*GUITest.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-unit.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-unit-test-execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>HTML</formats>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-unit.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>before-integration-test-execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-integration.exec</destFile>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>HTML</formats>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-integration.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>HTML,XML</formats>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentages.min.instruct}</minimum>
                                            <maximum>${jacoco.percentages.max.instruct}</maximum>
                                        </limit>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentages.min.line}</minimum>
                                            <maximum>${jacoco.percentages.max.line}</maximum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentages.min.branch}</minimum>
                                            <maximum>${jacoco.percentages.max.branch}</maximum>
                                        </limit>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentages.min.complex}</minimum>
                                            <maximum>${jacoco.percentages.max.complex}</maximum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentages.min.method}</minimum>
                                            <maximum>${jacoco.percentages.max.method}</maximum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>${jacoco.missed.count.class}</maximum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
