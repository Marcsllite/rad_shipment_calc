<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <!-- Titles/Names for the different pages of the application -->
    <entry key="mainPane">UMass Lowell - Rad Shipment Calculator</entry>
    <entry key="mainName">Main Page</entry>
    <entry key="menuPane">Rad Shipment Calculator - Menu Page</entry>
    <entry key="menuName">Menu Page</entry>
    <entry key="homePane">Rad Shipment Calculator - Home Page</entry>
    <entry key="homeName">Home Page</entry>
    <entry key="referencePane">Rad Shipment Calculator - Reference Page</entry>
    <entry key="referenceName">Reference Page</entry>
    <entry key="addPane">Rad Shipment Calculator - Add Page</entry>
    <entry key="addName">Add Page</entry>
    <entry key="editPane">Rad Shipment Calculator - Edit Page</entry>
    <entry key="editName">Edit Page</entry>
    <entry key="shipmentInfoPane">Rad Shipment Calculator - Shipment Information</entry>
    <entry key="shipmentName">Shipment Details</entry>
    <entry key="summaryPane">Rad Shipment Calculator - Summary Page</entry>
    <entry key="summaryName">Summary Page</entry>
    <entry key="summaryReport">Rad Shipment Calculator - Summary Report</entry>
    <entry key="summaryReportName">Summary Report Page</entry>

    <entry key="natures">
        Regular|
        Instrument|
        Article
    </entry>

    <entry key="states">
        Solid|
        Liquid|
        Gas
    </entry>

    <entry key="forms">
        Normal|
        Special
    </entry> 

    <!-- Operating Systems -->
    <entry key="windows">Windows</entry>
    <entry key="mac">MAC</entry>
    <entry key="unix">Unix</entry>
    <entry key="solaris">Solaris</entry>
    <entry key="noSupport">Not Supported</entry>

    <!-- Heights and Widths for different panes of the application -->
    <entry key="mainWidth">600</entry>
    <entry key="maxMainWidth">950</entry>
    <entry key="mainHeight">500</entry>
    <entry key="maxMainHeight">850</entry>
    <entry key="menuWidth">150</entry>
    <entry key="menuHeight">500</entry>
    <entry key="homeWidth">600</entry>
    <entry key="homeHeight">500</entry>
    <entry key="referenceWidth">600</entry>
    <entry key="referenceHeight">500</entry>
    <entry key="summaryWidth">600</entry>
    <entry key="summaryHeight">400</entry>
    <entry key="modifyHeight">320</entry>
    <entry key="modifyWidth">450</entry>
    <entry key="shipmentDetailsHeight">270</entry>
    <entry key="shipmentDetailsWidth">450</entry>

    <!-- css -->
    <entry key="umlBlue">\#0469B1</entry>
    <entry key="defaultWhite">\#fff</entry>
    <entry key="defaultGrey">\#8a8a8a</entry>

    <!-- SI Prefixes -->
    <entry key="siPrefixes">
        Yotta (Y)|
        Zetta (Z)|
        Exa (E)|
        Peta (P)|
        Tera (T)|
        Giga (G)|
        Mega (M)|
        Kilo (k)|
        Hecto (h)|
        Deka (da)|
        ----|
        Deci (d)|
        Centi (c)|
        Milli (m)|
        Micro (\u00B5)|
        Nano (n)|
        Pico (p)|
        Femto (f)|
        Atto (a)|
        Zepto (z)|
        Yocto (y)
    </entry>

    <entry key="radioactiveUnits">
        Becquerel (Bq)|
        Curie (Ci)
    </entry>

    <entry key="massUnits">
        grams|
        liters
    </entry>

    <!-- misc -->
    <entry key="appFolderName">UMass Lowell Radiation Safety</entry>
    <entry key="appMainFolder">Shipment Calculator</entry>
    <entry key="windowMinWidth">250</entry>
    <entry key="windowMaxWidth">325</entry>
    <entry key="defaultWindowTitle">Window</entry>
    <entry key="defaultConfirmTitle">Confirmation Window</entry>
    <entry key="defaultInformationTitle">Information Window</entry>
    <entry key="windowCloseMsg">User closed the Window</entry>
    <entry key="confirmCloseMsg">User closed the Confirmation Window</entry>
    <entry key="informationCloseMsg">User closed the Information Window</entry>
    <entry key="properTitle">This is a proper title</entry>
    <entry key="properMessage">This is a proper message</entry>
    <entry key="properBtnText">This is a proper button text</entry>
    <entry key="properBtnID">btnProperID</entry>
    <entry key="positiveBtnID">btnPositive</entry>
    <entry key="negativeBtnID">btnNegative</entry>
    <entry key="okayBtnID">btnOkay</entry>
    <entry key="defaultMessage ">No Message</entry>
    <entry key="defaultBtn">button</entry>
    <entry key="usrBtnClick">User clicked the {0} button</entry>
    <entry key="usrMenuBtnClick">User clicked the {0} menu button ({1}) times</entry>
    <entry key="properException">This is a proper Exception</entry>
    <entry key="timeout">1000</entry>
    <entry key="port">22</entry>
    <entry key="domain">uml.edu</entry>
    <entry key="defaultStr">Not Available</entry>
    <entry key="defaultInt">-2</entry>
    <entry key="tableDatePattern">MMM dd, yyyy</entry>
    <entry key="datePattern">MM/dd/yyyy</entry>
    <entry key="dateNormalFormat">MM/dd/yyyy hh:mm:ss a</entry>
    <entry key="dateFileNameFormat">MMddyyyy_HH-mm-ss</entry>
    <entry key="logFileName">ShipmentCalculator.log</entry>
    <entry key="fileChooserTitle">Select Import File</entry>
    <entry key="dirChooserTitle">Select save location</entry>
    <entry key="hmacInstance">HmacSHA256</entry>
    <entry key="cipherInstance">AES/CBC/PKCS5Padding</entry>
    <entry key="secretKeyVar2">AES</entry>
    <entry key="encKeyLength">16</entry>
    <entry key="authKeyLength">32</entry>
    <entry key="replacePropStringRegex">(\{\d+})</entry>

    <!-- database -->
    <entry key="defaultDBPath">./db/database{0}</entry>
    <entry key="h2DB_Driver">org.h2.Driver</entry>
    <entry key="h2DB_Path">jdbc:h2:./db/ShipmentCalculatorLocal</entry>
    <entry key="testDB_Path">jdbc:h2:./db/test</entry>
    <entry key="h2DB_Settings">;MV_STORE=FALSE;MVCC=FALSE;ACCESS_MODE_DATA=rw</entry>
    <entry key="DB_User">superuser</entry>
    <entry key="DB_Pass">SnayRadiation</entry>
    <entry key="SQLiteDB_Driver">org.sqlite.JDBC</entry>
    <entry key="SQLiteDB_Path">jdbc:sqlite:</entry>

    <!-- Database Tables -->
    <entry key="isotopesTableName">Isotopes</entry>
    <entry key="isotopesTableQuery">select {0} from Isotopes where {1}</entry>
    <entry key="createIsotopesTableCSV">create table if not exists Isotopes (Name varchar(255) not null, Abbr char(15) not null, primary key (Name, Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateIsotopesTable">merge into Isotopes values('{0}', '{1}')</entry>
    <entry key="updateIsotopesTableCSV">call csvwrite('{0}', 'select * from Isotopes')</entry>

    <entry key="shortLongTableName">ShortLong</entry>
    <entry key="shortLongTableQuery">select {0} from ShortLong</entry>
    <entry key="createShortLongTableCSV">create table if not exists ShortLong (Name varchar(255) not null, Abbr char(15) not null, primary key (Name, Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateShortLongTable">merge into ShortLong values('{0}', '{1}')</entry>
    <entry key="updateShortLongTableCSV">call csvwrite('{0}', 'select * from ShortLong')</entry>

    <entry key="A1TableName">A1</entry>
    <entry key="A1TableQuery">select {0} from A1 where {1}</entry>
    <entry key="createA1TableCSV">create table if not exists A1 (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateA1TableAbbr">update A1 set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateA1TableValue">update A1 set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToA1Table">merge into A1 values('{0}', {1})</entry>
    <entry key="updateA1TableCSV">call csvwrite('{0}', 'select * from A1')</entry>

    <entry key="A2TableName">A2</entry>
    <entry key="A2TableQuery">select {0} from A2 where {1}</entry>
    <entry key="createA2TableCSV">create table if not exists A2 (Abbr char(15) not null, Value real, primary key (Abbr)) as select *>onstant</entry>
    <entry key="decayConstTableQuery">select {0} from Decay_Constant where {1}</entry>
    <entry key="createDecayConstTableCSV">create table if not exists Decay_Constant (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateDecayConstTableAbbr">update Decay_Constant set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateDecayConstTableValue">update Decay_Constant set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToDecayConstTable">merge into Decay_Constant values('{0}', {1})</entry>
    <entry key="updateDecayConstTableCSV">call csvwrite('{0}', 'select * from Decay_Constant')</entry>

    <entry key="exemptConTableName">Exempt_Concentration</entry>
    <entry key="exemptConTableQuery">select {0} from Exempt_Concentration where {1}</entry>
    <entry key="createExemptConTableCSV">create table if not exists Exempt_Concentration (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateExemptConTableAbbr">update Exempt_Concentration set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateExemptConTableValue">update Exempt_Concentration set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToExemptConTable">merge into Exempt_Concentration values('{0}', {1})</entry>
    <entry key="updateExemptConTableCSV">call csvwrite('{0}', 'select * from Exempt_Concentration')</entry>

    <entry key="exemptLimTableName">Exempt_Limit</entry>
    <entry key="exemptLimTableQuery">select {0} from Exempt_Limit where {1}</entry>
    <entry key="createExemptLimTableCSV">create table if not exists Exempt_Limit (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateExemptLimTableAbbr">update Exempt_Limit set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateExemptLimTableValue">update Exempt_Limit set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToExemptLimTable">merge into Exempt_Limit values('{0}', {1})</entry>
    <entry key="updateExemptLimTableCSV">call csvwrite('{0}', 'select * from Exempt_Limit')</entry>

    <entry key="halfLifeTableName">HalfLife</entry>
    <entry key="halfLifeTableQuery">select {0} from HalfLife where {1}</entry>
    <entry key="createHalfLifeTableCSV">create table if not exists HalfLife (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateHalfLifeTableAbbr">update HalfLife set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateHalfLifeTableValue">update HalfLife set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToHalfLifeTable">merge into HalfLife values('{0}', {1})</entry>
    <entry key="updateHalfLifeTableCSV">call csvwrite('{0}', 'select * from HalfLife')</entry>

    <entry key="instrArtLimLimTableName">Instr_Art_Limited_Limit</entry>
    <entry key="instrArtLimLimTableQuery">select {0} from Instr_Art_Limited_Limit where {1}</entry>
    <entry key="createInstrArtLimLimTableCSV">create table if not exists Instr_Art_Limited_Limit (State char(6) not null, Form char(7) not null, Value real, primary key (State, Form)) as select * from csvread('{0}')</entry>
    <entry key="updateInstrArtLimLimTableValue">merge into Instr_Art_Limited_Limit values('{0}', '{1}', {2})</entry>
    <entry key="updateInstrArtLimLimTableCSV">call csvwrite('{0}', 'select * from Instr_Art_Limited_Limit')</entry>

    <entry key="instrArtPackageLimTableName">Instr_Art_Package_Limit</entry>
    <entry key="instrArtPackageLimTableQuery">select {0} from Instr_Art_Package_Limit where {1}</entry>
    <entry key="createInstrArtPackageLimTableCSV">create table if not exists Instr_Art_Package_Limit (State char(6) not null, Form char(7) not null, Value real, primary key (State, Form)) as select * from csvread('{0}')</entry>
    <entry key="updateInstrArtPackageLimTableValue">merge into Instr_Art_Package_Limit values values('{0}', '{1}', {2})</entry>
    <entry key="updateInstrArtPackageLimTableCSV">call csvwrite('{0}', 'select * from Instr_Art_Package_Limit')</entry>

    <entry key="licLimTableName">Licensing_Limit</entry>
    <entry key="licLimTableQuery">select {0} from Licensing_Limit where {1}</entry>
    <entry key="createLicLimTableCSV">create table if not exists Licensing_Limit (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateLicLimTableAbbr">update Licensing_Limit set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateLicLimTableValue">update Licensing_Limit set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToLicLimTable">merge into Licensing_Limit values('{0}', {1})</entry>
    <entry key="updateLicLimTableCSV">call csvwrite('{0}', 'select * from Licensing_Limit')</entry>

    <entry key="limLimitTableName">Limited_Limit</entry>
    <entry key="limLimitTableQuery">select {0} from Limited_Limit where {1}</entry>
    <entry key="createLimLimitTableCSV">create table if not exists Limited_Limit (State char(6) not null, Form char(7) not null, Value real, primary key (State, Form)) as select * from csvread('{0}')</entry>
    <entry key="updateLimLimitTableValue">merge into Limited_Limit values values('{0}', '{1}', {2})</entry>
    <entry key="updateLimLimitTableCSV">call csvwrite('{0}', 'select * from Limited_Limit')</entry>

    <entry key="reportQTableName">Reportable_Quantity</entry>
    <entry key="reportQTableQuery">select {0} from Reportable_Quantity where {1}</entry>
    <entry key="createReportQTableCSV">create table if not exists Reportable_Quantity (Abbr char(15) not null, Value real, primary key (Abbr)) as select * from csvread('{0}')</entry>
    <entry key="updateReportQTableAbbr">update Reportable_Quantity set Abbr ">'{0}' where Abbr ">'{1}'</entry>
    <entry key="updateReportQTableValue">update Reportable_Quantity set Value ">{0} where Abbr ">'{1}'</entry>
    <entry key="addToReportQTable">merge into Reportable_Quantity values('{0}', {1})</entry>
    <entry key="updateReportQTableCSV">call csvwrite('{0}', 'select * from Reportable_Quantity')</entry>

    <!-- testing -->
    <entry key="replacePropString_noText"></entry>
    <entry key="replacePropString_noReplacements">This string doesn't contain any replacements</entry>
    <entry key="replacePropString_oneReplacement">This string contains {0} replacements</entry>
    <entry key="replacePropString_wrongNumber">This string contains the incorrect {1} for replacement</entry>
    <entry key="replacePropString_twoReplacements">This string contains {0}, {1} replacements</entry>
    <entry key="replacePropString_threeReplacements">This string contains {0}, {1}, {2} replacements</entry>
    <entry key="replacePropString_oneSameReplacements">This string contains a replacement here: {0}, and the same replacement here: {0}</entry>
    <entry key="replacePropString_twoSameReplacements">First: {0}, Second: {1}, Third: {0}, Fourth: {1}</entry>
    <entry key="getList_TrailingDelimiters">This|List|has|trailing|delimiters||||</entry>
    <entry key="getList_SpacesWithinElements">element 1 has spaces|element 2 does too</entry>
    <entry key="getList_SpacesAroundElements">     there are spaces around this element    |   spaces around here too    </entry>
    <entry key="getList_ProperList">This|is|a|proper|list</entry>
</properties>